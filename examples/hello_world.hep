STD_OUTPUT_HANDLE : s32 : -11;

Kernel32 :: #foreign_system_library "kernel32";
WriteFile :: (handle: *void, to_write: *void, bytes_to_write: u32, bytes_written: *void, overlapped: *void) -> bool #foreign Kernel32;
GetStdHandle :: (handle_type: s32) -> *void #foreign Kernel32;

print :: (to_print!: string) {
    handle := GetStdHandle(STD_OUTPUT_HANDLE);
    to_write := cast(*void) to_print.datax;
    length := cast(u32) to_print.count
    bytes_written: *void = null;
    overlapped: *void = null;
    WriteFile(handle, to_write, length, bytes_written, overlapped);
}

main :: () {
    print("hello world!\r\n\0");
}